Problem Statement
There are n rectangles of the same size: w in width and h in length. It is required to find a square of the smallest size into
which these rectangles can be packed. Rectangles cannot be rotated.



import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc=new Scanner (System.in);
        long with=sc.nextLong();

        long hight=sc.nextLong();

        long N=sc.nextLong();

        long left =1,right=(long)(1e18)*1L;
        long ans=-1;

        while(left<=right)
        {
          long mid=left+(right-left)/2;
          long square=mid;
          long x=square/with;
          long y=square/hight;

          if(((y>=0 && x>=((N-1)/y+1))|| (x>0 && y>=((N-1)/x+1)))){
              ans=square;
              right=mid-1;

          }else{
              left=mid+1;
          }
        }

System.out.print(ans);
    }
}
